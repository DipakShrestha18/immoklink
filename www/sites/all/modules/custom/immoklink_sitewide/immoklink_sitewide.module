<?php
/**
 * @file
 * MWT Sitewide.
 * Exported panels layouts, pages, content-types and mini panels that are used
 * across the whole site.
 */

/**
 * Implements hook_ctools_plugin_api().
 */
function immoklink_sitewide_ctools_plugin_api($module, $api) {
  if ($module == 'panels' && $api == 'styles') {
    return array('version' => 2.0);
  }
  // This module exposes exported panels pages.
  if ($module == 'page_manager' && $api == 'pages_default') {
    return array('version' => 1);
  }
  // This is for mini panels.
  if ($module == "panels_mini" && $api == "panels_default") {
    return array("version" => "1");
  }
  // Now for pm_existing_pages pages.
  if ($module == 'pm_existing_pages' && $api == 'pm_existing_pages') {
    return array('version' => 1);
  }
  if ($module == "ctools_custom_content" && $api == "ctools_content") {
    return array("version" => "1");
  }
}

/**
 * Implements hook_ctools_plugin_directory()
 */
function immoklink_sitewide_ctools_plugin_directory($module, $plugin) {
  if ($module == 'page_manager' || $module == 'panels' || $module == 'ctools') {
    return 'plugins/' . $plugin;
  }
}

/**
 * Implements hook_default_page_manager_pages().
 */
function immoklink_sitewide_default_page_manager_pages() {
  // A page manager page is a custom page, built using panels, which has its
  // own discrete menu path.
  $pages = array();
  $module = 'immoklink_sitewide';
  $path = drupal_get_path('module', $module) . '/plugins/page_manager_pages';
  foreach (glob("{$path}/*.inc") as $file) {
    include($file);
    $pages[$page->name] = $page;
  }
  return $pages;
}

/**
 * Implements hook_default_page_manager_handlers().
 */
function immoklink_sitewide_default_page_manager_handlers() {
  // A page manager handler is an override to an existing page manager task:
  // For example: a custom panel page for the node-view page.
  $handlers = array();
  $module = 'immoklink_sitewide';
  $path = drupal_get_path('module', $module) . '/plugins/page_manager_handlers';
  foreach (glob("{$path}/*.inc") as $file) {
    include($file);
    $handlers[] = $handler;
  }
  return $handlers;
}

/**
 * Implementation of hook_default_panels_mini().
 */
function immoklink_sitewide_default_panels_mini() {
  $minis = array();
  $module = 'immoklink_sitewide';
  $path = drupal_get_path('module', $module) . '/plugins/panels_mini';
  foreach (glob("{$path}/*.inc") as $file) {
    include($file);
    $minis[$mini->name] = $mini;
  }
  return $minis;
}

/**
 * Implementation of hook_default_ctools_custom_content().
 */
function immoklink_sitewide_default_ctools_custom_content() {
  $content_panes = array();
  $module = 'immoklink_sitewide';
  $path = drupal_get_path('module', $module) . '/plugins/content_panes';
  foreach (glob("{$path}/*.inc") as $file) {
    include($file);
    $content_panes[$content->name] = $content;
  }
  return $content_panes;
}

/**
 * Implements hook_ctools_content_subtype_alter().
 */
function immoklink_sitewide_ctools_content_subtype_alter(&$subtype, &$plugin) {
  // Panels UI is bugged. Use a custom icon for Mini panels, so they are easily
  // spotted in the UI.
  if ($plugin['module'] == 'panels_mini') {
    $plugin['icon'] = $subtype['icon'] = drupal_get_path('module', 'immoklink_sitewide') . '/images/mini_panel_icon.png';
  }
}

/**
 * Implements hook_views_api().
 */
function immoklink_sitewide_views_api() {
  return array(
    'api' => '3.0',
  );
}

/**
 * Implements hook_views_default_views().
 */
function immoklink_sitewide_views_default_views() {
  $files = file_scan_directory(drupal_get_path('module', 'immoklink_sitewide') . '/plugins/views', '/inc$/', array('key' => 'filename', 'recurse' => FALSE));
  $views = array();
  if (!empty($files)) {
    foreach ($files as $file) {
      @include ($file->uri);
      $views[$view->name] = $view;
    }
  }
  return $views;
}

/**
 * Implements hook_menu().
 */
function immoklink_sitewide_menu() {
  $items = array();
  $items['gallery-thumbnail/%node'] = array(
    'title' => 'Gallery thumbnail listings',
    'description' => 'Thumbnail listings of gallery image.',
    'page callback' => 'gallery_thumbnail_listings_page',
    'page arguments' => array(1),
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
  );
  $items['news'] = array(
    'title' => 'News listings page',
    'description' => 'News listings page',
    'page callback' => 'news_listings_page',
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
  );
  $items['news/%'] = array(
    'title' => 'News listings',
    'description' => 'News listings page by tags',
    'page callback' => 'news_listings_page_by_tag',
    'page arguments' => array(1),
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
  );
  $items['news-tag-listings'] = array(
    'title' => 'Tags listings',
    'description' => 'List of all the tags',
    'page callback' => 'tags_listings_page',
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
  );

  return $items;
}

/**
 * Callback function.
 */
function gallery_thumbnail_listings_page($node) {
  $output = '';

  $output .= '<div class="page"><article><h1>Projects</h1></article>';
  $images = $node->field_gallery_images[LANGUAGE_NONE];

  $output .= '<div class="content grid"><div class="wrap">';
  foreach ($images as $image) {
    $image = paragraphs_field_get_entity($image);

    $image_path = $image->field_gallery_bundle_image[LANGUAGE_NONE][0]['uri'];
    $image = theme_image_style(array('style_name' => 'gallery_thumbnail', 'path' => $image_path, 'height' => '', 'width' => '', 'attributes' => array('class' => array('fade-me-in'))));
    $path = '/' . drupal_get_path_alias('node/' . $node->nid);
    $output .= '<a href="' . $path . '" class="grid-item">';
    $output .= $image;
    $output .= '<div class="overlay"></div></a>';
  }
  $output .= '</div></div></div>';

  return $output;
}

/**
 * News listings page.
 */
function news_listings_page() {
  $output = '';
  global $base_url;
  $output .= '<h1>News listings</h1>';
  $output .= '
			<section id="gallery-highlight" class="page-cover">
			</section>
			<section id="gallery-collection" class="page-grid">

			</section></article></div>';
  $output .= '<script id="page-cover-tpl" type="text/x-jsrender">
		<div class="page-cover-item clearfix image-{{:~imageOrientation(image)}}" data-id="{{:id}}">
			<div class="page-cover-wrap">
				<span class="page-cover-img">
					<a href="{{:link}}"><img src="{{:image.path}}" alt="{{:title}}" title="{{:title}}"></a>
				</span>
			</div>
			<div class="page-cover-wrap">
				<a href="{{:link}}"><h2>{{:title}}</h2></a>
				<p>{{:description}}</p>
				<em>{{:date}}</em>
				<ul class="page-cover-tags">
					{{for tags}}
					<li>{{:#data}}</a></li>
					{{/for}}
				</ul>
			</div>
		</div>
	</script>';
  $output .= '<script id="page-grid-tpl" type="text/x-jsrender">
		<div class="page-grid-item clearfix image-{{:~imageOrientation(image)}}" data-id="{{:id}}">
			<div class="page-grid-wrap">
				<span class="page-grid-img">
					<a href="{{:link}}"><img src="{{:image.path}}" alt="{{:title}}" title="{{:title}}" ></a>
				</span>
			</div>
			<div class="page-grid-wrap">
				<a href="{{:link}}"><h2>{{:title}}</h2></a>
				<p>{{:description}}</p>
				<em>{{:date}}</em>
				<ul class="page-grid-tags">
					{{for tags}}
					<li>{{:#data}}</li>
					{{/for}}
				</ul>
			</div>
		</div>
	</script>';

  $output .= '<script type="text/javascript" src="/sites/all/themes/immoklink_base//js/jquery-1.8.3.min.js"></script>
  <script type="text/javascript" src="/sites/all/themes/immoklink_base//js/masonry.min.js"></script>
  <script type="text/javascript" src="/sites/all/themes/immoklink_base//js/jsrender.min.js"></script>';
  $output .= '<script type="text/javascript">

    $.views.helpers({
			imageOrientation: function (val) {
    if (!val || !val.hasOwnProperty("width") || !val.hasOwnProperty("height")) {
      return "unknown";
    }
    return parseInt(val.width) > parseInt(val.height) ? "landscape" : "portrait";
  }
		});


		var Gallery = function () {};

		Gallery.prototype.endpoint = "' . $base_url . '/news/json";

		Gallery.prototype.pageCoverElement = "gallery-highlight";
		Gallery.prototype.pageGridElement= "gallery-collection";

		Gallery.prototype.pageCoverClass = ".page-cover";
		Gallery.prototype.pageGridClass = ".page-grid";

		Gallery.prototype.pageCoverItemClass = ".page-cover-item";
		Gallery.prototype.pageGridItemClass = ".page-grid-item";

		Gallery.prototype.organise = {};

		Gallery.prototype.organiseGrid = function () {
      //if (typeof $.masonry === "function") {
      this.organise = $(this.pageGridClass).masonry({
				  // options
				  itemSelector: this.pageGridItemClass,
				  columnWidth: 290,
				  //percentPosition: true,
				  gutter: 25,
				  initLayout: false,
				  fitWidth: true
				});
			//}
		}

		Gallery.prototype.getImages = function () {
      var pageGridHtml = $.templates("#page-grid-tpl");
      var pageCoverHtml = $.templates("#page-cover-tpl");

      var self = this;

      return $.getJSON(this.endpoint, function (results) {
        if (results && results.hasOwnProperty("data") && results.data.length > 0) {
          $.each(results.data, function(k, v) {
            //populate first three image as cover
            //and rest as grid
            if (v.hasOwnProperty("id") && parseInt(v.id) <= 3) {
              $("#" + self.pageCoverElement).append(pageCoverHtml.render(v));
            } else {
              $("#" + self.pageGridElement).append(pageGridHtml.render(v));
            }
          });

          if ($(self.pageGridClass).length > 0) {
            self.organiseGrid();
            setTimeout(function () {
              self.organise.masonry();
            }, 100);
          }
        }

      });
    }

		var g = new Gallery();

		g.getImages();

	</script>';
  return $output;
}

/**
 * Call back for news listings by taxonomy.
 */
function news_listings_page_by_tag($tid) {
  $output = '';

  global $base_url;
  $term = taxonomy_term_load($tid);
  if ($term) {
    if ($term->vocabulary_machine_name == 'news_tags') {
      $output .= '<h1>News tagged with ' . $term->name . '</h1>';
      $output .= '<section id="gallery-highlight" class="page-cover">
			</section>
			<section id="gallery-collection" class="page-grid">

			</section></article></div>';
      $output .= '<script id="page-cover-tpl" type="text/x-jsrender">
		<div class="page-cover-item clearfix image-{{:~imageOrientation(image)}}" data-id="{{:id}}">
			<div class="page-cover-wrap">
				<span class="page-cover-img">
					<a href="{{:link}}"><img src="{{:image.path}}" alt="{{:title}}" title="{{:title}}"></a>
				</span>
			</div>
			<div class="page-cover-wrap">
				<a href="{{:link}}"><h2>{{:title}}</h2></a>
				<p>{{:description}}</p>
				<em>{{:date}}</em>
				<ul class="page-cover-tags">
					{{for tags}}
					<li>{{:#data}}</li>
					{{/for}}
				</ul>
			</div>
		</div>
	</script>';
      $output .= '<script id="page-grid-tpl" type="text/x-jsrender">
		<div class="page-grid-item clearfix image-{{:~imageOrientation(image)}}" data-id="{{:id}}">
			<div class="page-grid-wrap">
				<span class="page-grid-img">
					<a href="{{:link}}"><img src="{{:image.path}}" alt="{{:title}}" title="{{:title}}" ></a>
				</span>
			</div>
			<div class="page-grid-wrap">
				<a href="{{:link}}"><h2>{{:title}}</h2></a>
				<p>{{:description}}</p>
				<em>{{:date}}</em>
				<ul class="page-grid-tags">
					{{for tags}}
					<li>{{:#data}}</li>
					{{/for}}
				</ul>
			</div>
		</div>
	</script>';

      $output .= '<script type="text/javascript" src="/sites/all/themes/immoklink_base//js/jquery-1.8.3.min.js"></script>
  <script type="text/javascript" src="/sites/all/themes/immoklink_base//js/masonry.min.js"></script>
  <script type="text/javascript" src="/sites/all/themes/immoklink_base//js/jsrender.min.js"></script>';
      $output .= '<script type="text/javascript">

    $.views.helpers({
			imageOrientation: function (val) {
    if (!val || !val.hasOwnProperty("width") || !val.hasOwnProperty("height")) {
      return "unknown";
    }
    return parseInt(val.width) > parseInt(val.height) ? "landscape" : "portrait";
  }
		});


		var Gallery = function () {};';

      $output .= 'Gallery.prototype.endpoint = "' . $base_url . '/news/json/' . $tid . '";

		Gallery.prototype.pageCoverElement = "gallery-highlight";
		Gallery.prototype.pageGridElement= "gallery-collection";

		Gallery.prototype.pageCoverClass = ".page-cover";
		Gallery.prototype.pageGridClass = ".page-grid";

		Gallery.prototype.pageCoverItemClass = ".page-cover-item";
		Gallery.prototype.pageGridItemClass = ".page-grid-item";

		Gallery.prototype.organise = {};

		Gallery.prototype.organiseGrid = function () {
      //if (typeof $.masonry === "function") {
      this.organise = $(this.pageGridClass).masonry({
				  // options
				  itemSelector: this.pageGridItemClass,
				  columnWidth: 290,
				  //percentPosition: true,
				  gutter: 25,
				  initLayout: false,
				  fitWidth: true
				});
			//}
		}

		Gallery.prototype.getImages = function () {
      var pageGridHtml = $.templates("#page-grid-tpl");
      var pageCoverHtml = $.templates("#page-cover-tpl");

      var self = this;

      return $.getJSON(this.endpoint, function (results) {
        if (results && results.hasOwnProperty("data") && results.data.length > 0) {
          $.each(results.data, function(k, v) {
            //populate first three image as cover
            //and rest as grid
            if (v.hasOwnProperty("id") && parseInt(v.id) <= 3) {
              $("#" + self.pageCoverElement).append(pageCoverHtml.render(v));
            } else {
              $("#" + self.pageGridElement).append(pageGridHtml.render(v));
            }
          });

          if ($(self.pageGridClass).length > 0) {
            self.organiseGrid();
            setTimeout(function () {
              self.organise.masonry();
            }, 100);
          }
        }

      });
    }

		var g = new Gallery();

		g.getImages();

	</script>';
    }
    return $output;
  }
}

/**
 * Callback function.
 */
function tags_listings_page() {
  $output = '';
  global $base_url;
  $output .= '<h1>Tags</h1>';
  $output .= '<div class="clear-left"></div>';

  $vocab = taxonomy_vocabulary_machine_name_load('news_tags');
  $tree = taxonomy_get_tree($vocab->vid);
  $output .= '<ul class="list-unstyled list-lined">';
  foreach ($tree as $term) {
    $countnode = db_query("SELECT COUNT(field_news_tags_tid) AS count FROM {field_data_field_news_tags} WHERE field_news_tags_tid = :field_news_tags_tid", array(':field_news_tags_tid' => $term->tid))->fetchField();

    $output .= '<li class="br-keyline cf">';
    $output .= '<a class="istats--tracker" href="' . $base_url . '/news/' . $term->tid . '">';
    $output .= '<h2 class="delta pull--left no-margin">' . $term->name . '</h2>';
    $output .= '<p class="pull--right no-margin text--shout deemphasize br-page-text-ontext"> ' . $countnode . ' posts </p>';
    $output .= '</a>';
    $output .= '</li>';
  }
  $output .= '</ul>';
  return $output;
}

/**
 * Newsletter signup form.
 */
function immoklink_sitewide_newsletter_form() {
  $form['#prefix'] = '<div id="signup-error"></div><div id="webform-ajax-wrapper-3">';
  $form['#suffix'] = '</div>';
  $form['my_markup'] = array(
      '#markup' => '<div class="signup">Sign up for email updates</div>'
  );
  $form['signup'] = array(
      '#title' => t(" "),
      '#type' => 'textfield',
      '#default_value' => '',
      '#attributes' => array(
          'placeholder' => t('email@there.com'),
      ),
  );
  $form['actions']['submit'] = array(
      '#type' => 'submit',
      '#value' => t('sign up'),
  );
  $form['#validate'] = array('immoklink_sitewide_newsletter_form_validate');
  $form['#submit'] = array('immoklink_sitewide_newsletter_form_submit');
  $form['actions']['submit']['#ajax'] = array(
      'callback' => 'immoklink_sitewide_newsletter_form_ajax_callback',
      'event' => 'click',
      'wrapper' => 'newsletter-form',
      'progress' => array(
          'message' => '',
          'type' => 'throbber',
      ),
  );
  return $form;
}
