<?php

/**
 * Implements hook_menu()
 */
function immoklink_news_json_menu() {
  $items = array();

  $items['news/json'] = array(
    'title' => 'News JSON feed',
    'page callback' => 'news_json',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['news/json/%'] = array(
    'title' => 'News JSON feed based on tagging',
    'page callback' => 'news_json_argument',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['home/feed'] = array(
    'title' => 'Homepage image feed',
    'page callback' => 'homepage_json_feed',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['thumbnail-gallery/json/%node'] = array(
      'title' => 'Thumbnail listing JSON feed based on each gallery',
      'page callback' => 'thumbnail_gallery_json',
      'page arguments' => array(2),
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Callback function to return news json.
 */
function news_json() {
  if (!cache_get('news_json', 'cache')) {
    $query = new EntityFieldQuery();
    $results = $query->entityCondition('entity_type', 'node')
      ->entityCondition('bundle', 'news')
      ->propertyCondition('status', 1, '=')
      ->fieldOrderBy('field_news_date', 'value', 'DESC')
      ->execute();

    if (!empty($results['node'])) {
      $nodes = node_load_multiple(array_keys($results['node']));
    }
    $json = get_json_form_nodes($nodes);
    cache_set('news_json', $json, 'cache', REQUEST_TIME + (3600 * 24 * 30 * 6));
  } else {
    $cacheobject = cache_get('news_json', 'cache');
    $json = $cacheobject->data;
  }
  echo $json;
}

/**
 * Callback function to get JSON feed with argument.
 * @param $tid
 */
function news_json_argument($tid) {
  if (!cache_get('news_' . $tid . '_json', 'cache')) {
    $query = new EntityFieldQuery();
    $results = $query->entityCondition('entity_type', 'node')
      ->entityCondition('bundle', 'news')
      ->propertyCondition('status', 1, '=')
      ->fieldCondition('field_news_tags', 'tid', $tid)
      // ->fieldOrderBy('field_news_date', 'value', 'DESC')
      ->execute();

    if (!empty($results['node'])) {
      $nodes = node_load_multiple(array_keys($results['node']));
    }
    $json = get_json_form_nodes($nodes);
    cache_set('news_' . $tid . '_json', $json, 'cache', REQUEST_TIME + (3600 * 24 * 30 * 6));
  } else {
    $cacheobject = cache_get('news_' . $tid . '_json', 'cache');
    $json = $cacheobject->data;
  }
  echo $json;
}

/**
 * function to parse JSON.
 * @param $nodes
 */
function get_json_form_nodes($nodes) {
  global $base_url;

  $feed = new stdClass();
  $feed->code = 200;
  $feed->message = 'success';
  $feed->data = array();
  $count = 1;
  foreach ($nodes as $key => $node) {
    $feeds = new stdClass();
    $feeds->id = $count;
    $feeds->title = $node->title;
    $feeds->link = $base_url . '/' . drupal_get_path_alias('node/' .$node->nid);
    if (isset($node->field_news_listing_text[LANGUAGE_NONE])) {
      $feeds->description = $node->field_news_listing_text[LANGUAGE_NONE][0]['value'];
    } else {
      $feeds->description = '';
    }
    $date = format_date($node->field_news_date[LANGUAGE_NONE][0]['value'], 'custom', 'j M Y');
    $feeds->date = $date;

    if (isset($node->field_news_tags[LANGUAGE_NONE])) {
      $tags = $node->field_news_tags[LANGUAGE_NONE];
      $tag_name = array();
      foreach ($tags as $tag) {
        $term = taxonomy_term_load($tag['tid']);
        $tag_name[] = '<a href="' . $base_url . '/news/' . $tag['tid'] . '" class="tag">' .$term->name . '</a>';
      }
      $tags = implode(', ', $tag_name);
    } else {
      $tags = '';
    }
    $feeds->tags = $tags;

    if (isset($node->field_news_image_main[LANGUAGE_NONE])){
      $image_path = $node->field_news_image_main[LANGUAGE_NONE][0]['uri'];
      $url = file_create_url($image_path);
      $url = parse_url($url);
      $path = $url['path'];
      $feeds->image->path = $path;

      $my_image = array_values(getimagesize($base_url .   $path));
      // $feeds->image->file = $base_url;
      //use list on new array
      list($width, $height, $type, $attr) = $my_image;
      $feeds->image->width = $width;
      $feeds->image->height = $height;
    }

    $feed->data[] = $feeds;
    $count++;
  }
  $json = drupal_json_encode($feed);
  return $json;
}

/**
 * Callback function homepage json feed.
 */
function homepage_json_feed() {
  if (!cache_get('homepage_json_feed', 'cache')) {
    $query = new EntityFieldQuery();
    $results = $query->entityCondition('entity_type', 'node')
        ->entityCondition('bundle', 'home')
        ->propertyCondition('status', 1, '=')
        ->execute();
    if (!empty($results['node'])) {
      $node = node_load_multiple(array_keys($results['node']));
      $node = array_shift($node);
      if (isset($node->field_homepage_images[LANGUAGE_NONE])) {
        $bundles = $node->field_homepage_images[LANGUAGE_NONE];
      }
    }
    $json = get_homepage_json($bundles);
    cache_set('homepage_json_feed', $json, 'cache', REQUEST_TIME + (3600 * 24 * 30 * 6));
  } else {
    $cacheobject = cache_get('homepage_json_feed', 'cache');
    $json = $cacheobject->data;
  }
  echo $json;
  //return '';
}

/**
 * Function to parse homepage JSON.
 */
function get_homepage_json($bundles) {
    $feed = new stdClass();
    $feed->code = 200;
    $feed->message = 'success';
    $feed->data = array();
    $count = 1;

  foreach ($bundles as $bundle) {
    global $base_url;
    $paragraph = paragraphs_field_get_entity($bundle);

    $feeds = new stdClass();
    $feeds->id = $count;

    if (isset($paragraph->field_homepage_bundle_title[LANGUAGE_NONE])) {
      $feeds->title = $paragraph->field_homepage_bundle_title[LANGUAGE_NONE][0]['value'];
    }

    if (isset($paragraph->field_homepage_bundle_image[LANGUAGE_NONE])) {
      $feeds->count = count($paragraph->field_homepage_bundle_image[LANGUAGE_NONE]);
    }

    if (isset($paragraph->field_homepage_gallery_link[LANGUAGE_NONE])) {
      $feeds->url = $base_url . '/' . drupal_get_path_alias('node/' . $paragraph->field_homepage_gallery_link[LANGUAGE_NONE][0]['target_id']);
    }

    if (isset($paragraph->field_homepage_images_type[LANGUAGE_NONE])) {
      $feeds->orientation = strtolower($paragraph->field_homepage_images_type[LANGUAGE_NONE][0]['value']);
    }

    if (isset($paragraph->field_homepage_bundle_image[LANGUAGE_NONE])) {
      $images = $paragraph->field_homepage_bundle_image[LANGUAGE_NONE];
      $image_url = array();
      foreach ($images as $image) {
        $image_path = $image['uri'];
        $image = theme_image_style(array('style_name' => 'gallery_thumbnail', 'path' => $image_path, 'height' => '', 'width' => ''));
        preg_match('/<img(.*)src(.*)=(.*)"(.*)"/U', $image, $result);
        $image = array_pop($result);
        $image_url[] = $image;
      }

     // $image_urls = implode('", "', $image_url);
      // $feeds->images = ["http://immoklink.site/sites/default/files/16ViennaOperaBall-9324.jpg", "http://immoklink.site/sites/default/files/18ViennaOperaBall-9662.jpg"];

      $filter = function($tag){ return '' . $tag . ''; };
      $feeds->images = array_map($filter, $image_url);
  }

    $feed->data[] = $feeds;
    $count++;
  }
  $json = drupal_json_encode($feed, JSON_HEX_QUOT);
  return $json;
}

/**
 * Callback function to create thumbnail gallery JSON.
 */
function thumbnail_gallery_json($node) {
  global $base_url;

  $feed = new stdClass();
  $feed->code = 200;
  $feed->message = 'success';
  $feed->data = array();
  $count = 0;

  if (isset($node->field_gallery_images[LANGUAGE_NONE])) {
    $images = $node->field_gallery_images[LANGUAGE_NONE];
  }

  foreach ($images as $image) {
    $feeds = new stdClass();
    $feeds->id = $count;
    $feeds->url = $base_url . '/' . drupal_get_path_alias('node/' . $node->nid) . '?sid=' . $count;

    $image = paragraphs_field_get_entity($image);
    if (isset($image->field_gallery_bundle_image[LANGUAGE_NONE])) {

      if (isset($image->field_homepage_gallery_link[LANGUAGE_NONE])) {
        $feeds->url = $base_url . '/' . drupal_get_path_alias('node/' . $node->nid);
      }

      $width = $image->field_gallery_bundle_image[LANGUAGE_NONE][0]['width'];
      $height = $image->field_gallery_bundle_image[LANGUAGE_NONE][0]['height'];

      if ($height > $width) {
        $feeds->orientation = 'portrait';
      } else if ($height <= $width) {
        $feeds->orientation = 'landscape';
      }

      $image_path = $image->field_gallery_bundle_image[LANGUAGE_NONE][0]['uri'];
      $image = theme_image_style(array('style_name' => 'gallery_thumbnail', 'path' => $image_path, 'height' => '', 'width' => ''));
      preg_match('/<img(.*)src(.*)=(.*)"(.*)"/U', $image, $result);
      $image = array_pop($result);
      $feeds->images = $image;
    }
    $feed->data[] = $feeds;
    $count++;
  }
  $json = drupal_json_encode($feed);
  print $json;
}

/**
 * Implements hook_node_insert().
 */
function immoklink_news_json_node_insert($node) {
  if ($node->type == 'news') {
    cache_clear_all('*', 'cache', TRUE);
  }
}

/**
 * Implements hook_node_update().
 */
function immoklink_news_json_node_update($node) {
  if ($node->type == 'news' || $node->type == 'home') {
    cache_clear_all('*', 'cache', TRUE);
  }
}
