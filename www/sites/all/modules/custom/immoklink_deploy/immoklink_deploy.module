<?php

/**
 * @file
 * immoklinkorate Site deploy module.
 *
 * Functions for aiding zero touch deployment.
 */

/*
 * Disable unneeded modules.
 */
function immoklink_deploy_module_disable() {
  // Modules to disable.
  $disable = array(
    'aggregator',
    'blog',
    'book',
    'color',
    'comment',
    'contact',
    'translation',
    'dashboard',
    'forum',
    'locale',
    'openid',
    'overlay',
    'php',
    'poll',
    'statistics',
    'toolbar',
    'tracker',
    'trigger',
    'profile',
    'tracker',
    'trigger',
    'comment',
  );

  foreach ($disable as $module) {
    if (module_exists($module)) {
      module_disable(array($module));
    }
  }
  menu_rebuild();
}

/*
 * Enable needed modules.
 */

function immoklink_deploy_module_enable() {
  // Modules to enable.
  $enable = array(
    'block',
    'dblog',
    'field',
    'field_ui',
    'file',
    'filter',
    'help',
    'image',
    'options',
    'number',
    'list',
    'menu',
    'node',
    'taxonomy',
    'user',
    'system',
    'token',
    'ctools',
    'features',
    'strongarm',
    'panels',
    'page_manager',
    'admin_menu',
    'admin_menu_toolbar',
    'entity',
    'entityreference',
    'views',
    'views_ui',
    'views_content',
    'path',
    'field_group',
    'diff',
    'libraries',
    'wysiwyg',
    'pasteformat',
    //date
    'date',
    'date_api',
    'date_popup',
    'date_views',
    'planer',
    'semanticviews',
    'panels_everywhere',
    'panels_mini',
    'ctools_custom_content',
    // Media
    'file_entity',
    'media',
    'mediafield',
    'pathauto',
    'pathauto_persist',
    // UX
    'save_edit',
    // Modules for development.
    'devel',
    'secure_permissions',
    'secure_permissions_data',
    'admin_views',
    // Custom modules.
    'immoklink_sitewide',
    // GA  & SEO
    'googleanalytics',
    'eu_cookie_compliance',
    'metatag',
    'link',
    'views_bulk_operations',
    'token',
    'entityreference_autocomplete',
    'chosen',
    'ckeditor',
    'media_ckeditor',
    'immoklink_markup',
    'immoklink_field_formatters',
    'immoklink_info_field',
    'paragrahps',
    'immoklink_exhibitions_field',
    'no_field_markup',
    'workbench',
    'workbench_moderation',
    'entity_view_mode',
  );

  foreach ($enable as $module) {
    if (!module_exists($module)) {
      module_enable(array($module));
    }
  }
  menu_rebuild();
}

/**
 * Function for enabling all the sites features.
 */
function immoklink_deploy_features() {
  $enable[] = array(
    'fimmoklink_news',
    'fimmoklink_text_formats_and_wysiwyg_profiles',
    'fimmoklink_image_config',
    'fimmoklink_path',
    'fimmoklink_info',
    'fimmoklink_exhibitions',
    'fimmoklink_books',
    'fimmoklink_paragraphs',
    'fimmoklink_gallery',
    'fimmoklink_gallery_listings',
    'fimmoklink_frontend',
    'fimmoklink_entity_view_mode',
    'fimmoklink_media',
  );
  foreach ($enable as $group) {
    features_install_modules($group);
    menu_rebuild();
  }
}

/**
 * Set the default settings for wysiwyg module
 */
function immoklink_deploy_wysiwyg_settings() {
  $values = array(
    'default' => 1,
    'user_choose' => 0,
    'show_toggle' => 1,
    'theme' => 'advanced',
    'language' => 'en',
    'buttons' => array(
      'default' => array(
        'Bold' => 1,
        'Italic' => 1,
        'BulletedList' => 1,
        'NumberedList' => 1,
        'Undo' => 1,
        'Redo' => 1,
        'Link' => 1,
        'Unlink' => 1,
        'Anchor' => 1,
        'Blockquote' => 1,
        'Source' => 1,
        'Subscript' => 1,
        'Superscript' => 1,
        'RemoveFormat' => 1,
        'SpecialChar' => 1,
        'Table' => 1,
      ),
      'media' => array(
        'media' => 1,
      ),
      'pasteformat' => array(
        'pasteformat' => 1,
      ),
    ),
    'toolbar_loc' => 'top',
    'toolbar_align' => 'left',
    'path_loc' => 'bottom',
    'resizing' => 1,
    'verify_html' => 1,
    'preformatted' => 0,
    'convert_fonts_to_spans' => 1,
    'remove_linebreaks' => 1,
    'apply_source_formatting' => 1,
    'paste_auto_cleanup_on_paste' => 1,
    'block_formats' => 'p,address,pre,h2,h3,h4,h5,h6,div',
    'css_settings' => 'theme',
    'css_path' => '',
    'css_classes' => '',
  );

  // Insert filtered html profile data.
  db_merge('wysiwyg')
    ->key(array('format' => 'full_html'))
    ->fields(array(
      'editor' => 'ckeditor',
      'settings' => serialize($values),
    ))
    ->execute();

  wysiwyg_profile_cache_clear();
}

function immoklink_deploy_set_theme() {
  $enable = array(
    'theme_default' => 'immoklink_base',
    'admin_theme' => 'seven',
  );
  theme_enable($enable);

  foreach ($enable as $var => $theme) {
    if (!is_numeric($var)) {
      variable_set($var, $theme);
    }
  }

  // Disable the default Bartik theme
  theme_disable(array('bartik'));
  variable_set('node_admin_theme', 1);
}

/**
 * Function to enable all the needed system pages that come disabled by default.
 */
function immoklink_deploy_panel_pages_enable() {
  if (module_exists('page_manager')) {
    // Array of the system pages (or page manager tasks) we want to enable.
    $system_pages = array(
      'node_view',
      'user_view',
      'term_view',
      'site_template',
    );
    foreach ($system_pages as $page_manager_task) {
      immoklink_deploy_panel_page_enable($page_manager_task);
    }
  }
}

/**
 * Enable a single system page (page manager task).
 */
function immoklink_deploy_panel_page_enable($page_manager_task) {
  if (module_exists('page_manager')) {
    if ($enable_function = immoklink_deploy_page_manager_task_enable_function($page_manager_task)) {
      page_manager_get_task($page_manager_task);
     // print_r($page_manager_task);
      // All page manager tasks expects a $cache param that is not used, and then
      // the value (FALSE to enable, TRUE to disable). It's weird but it's like
      // it is. Ask merlinofchaos, not me.
      $enable_function(NULL, FALSE);
    }
  }
}

/**
 * Returns the function that should be used to enable a specific page manager page.
 *
 * @return String|Null The name of the function that needs to be used to enable
 *   a specific panel page, or NULL if there's no such function defined.
 */
function immoklink_deploy_page_manager_task_enable_function($page_manager_task) {
  $page_manager_task_functions = array(
    'node_view' => 'page_manager_node_view_enable',
    'user_view' => 'page_manager_user_view_enable',
    'term_view' => 'page_manager_term_view_enable',
    'site_template' => 'panels_everywhere_site_template_enable',
  );

  if (isset($page_manager_task_functions[$page_manager_task])) {
    return $page_manager_task_functions[$page_manager_task];
  }
  return NULL;
}

/**
 * Deploy all taxonomies data.
 */
function immoklink_deploy_taxonomies() {
  // Load helper functions
  module_load_include('inc', 'immoklink_deploy', 'includes/immoklink_deploy.taxonomy');

  // Deploy all taxonomies in code one by one.
  $path = drupal_get_path('module', 'immoklink_deploy') . '/includes/taxonomy';
  foreach (glob("{$path}/*.inc") as $file) {
    include_once $file;
    immoklink_deploy_create_taxonomy($vocab, $terms);
  }
}

/**
 * Deploy a given taxonomy.
 *
 * @param $machine_name
 */
function immoklink_deploy_taxonomy($machine_name) {
  if (taxonomy_vocabulary_machine_name_load($machine_name)) {
    return;
  }
  // Load helper functions
  module_load_include('inc', 'immoklink_deploy', 'includes/immoklink_deploy.taxonomy');

  // Load the selected taxonomy file and create it into the database.
  $filename = drupal_get_path('module', 'immoklink_deploy') . '/includes/taxonomy/' . $machine_name . '.inc';
  if (file_exists($filename)) {
    include_once $filename;
    immoklink_deploy_create_taxonomy($vocab, $terms);
  }
}
